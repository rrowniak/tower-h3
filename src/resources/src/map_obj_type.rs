use crate::map_structs::*;

#[derive(Debug, Default)]
pub enum ObjectType {
    #[default]
    AltarOfSacrifice,
    AnchorPoint,
    Arena,
    Artifact,
    PandorasBox,
    BlackMarket,
    Boat,
    Borderguard,
    Keymaster,
    Buoy,
    Campfire,
    Cartographer,
    SwanPond,
    CoverOfDarkness,
    CreatureBank,
    CreatureGenerator1{owner: Option<Ownership>},
    CreatureGenerator2{owner: Option<Ownership>},
    CreatureGenerator3{owner: Option<Ownership>},
    CreatureGenerator4{owner: Option<Ownership>},
    CursedGround1,
    Corpse,
    MarlettoTower,
    DerelictShip,
    DragonUtopia,
    Event(EventData),
    EyeOfMagi,
    FaerieRing,
    Flotsam,
    FountainOfFortune,
    FountainOfYouth,
    GardenOfRevelation,
    Garrison,
    Hero(HeroData),
    HillFort,
    Grail,
    HutOfMagi,
    IdolOfFortune,
    LeanTo,
    LibraryOfEnlightenment,
    Lighthouse{owner: Option<Ownership>},
    MonolithOneWayEntrance,
    MonolithOneWayExit,
    MonolithTwoWay,
    MagicPlains1,
    SchoolOfMagic,
    MagicSpring,
    MagicWell,
    MarketOfTime,
    MercenaryCamp,
    Mermaid,
    Mine(MineData),
    Monster(MonsterData),
    MysticalGarden,
    Oasis,
    Obelisk,
    RedwoodObservatory,
    OceanBottle,
    PillarOfFire,
    StarAxis,
    Prison(HeroData),
    PyramidOrWogObject, //subtype 0 for pyramid, >0 for Wog object
    RallyFlag,
    RandomArt,
    RandomTreasureArt,
    RandomMinorArt,
    RandomMajorArt,
    RandomRelicArt,
    RandomHero(HeroData),
    RandomMonster(MonsterData),
    RandomMonsterL1(MonsterData),
    RandomMonsterL2(MonsterData),
    RandomMonsterL3(MonsterData),
    RandomMonsterL4(MonsterData),
    RandomResource,
    RandomTown,
    RefugeeCamp,
    Resource,
    Sanctuary,
    Scholar,
    SeaChest,
    SeerHut,
    Crypt,
    Shipwreck,
    ShipwreckSurvivor,
    Shipyard{owner: Option<Ownership>},
    ShrineOfMagicIncantation,
    ShrineOfMagicGesture,
    ShrineOfMagicThought,
    Sign,
    Sirens,
    SpellScroll,
    Stables,
    Tavern,
    Temple,
    DenOfThieves,
    Town,
    TradingPost,
    LearningStone,
    TreasureChest,
    TreeOfKnowledge,
    SubterraneanGate,
    University,
    Wagon,
    WarMachineFactory,
    SchoolOfWar,
    WarriorsTomb,
    WaterWheel,
    WateringHole,
    Whirlpool,
    Windmill,
    WitchHut,
    Brush, // Todo: How does it look like?
    Bush,
    Cactus,
    Canyon,
    Crater,
    DeadVegetation,
    Flowers,
    FrozenLake,
    Hedge,
    Hill,
    Hole,
    Kelp,
    Lake,
    LavaFlow,
    LavaLake,
    Mushrooms,
    Log,
    Mandrake,
    Moss,
    Mound,
    Mountain,
    OakTrees,
    Outcropping,
    PineTrees,
    Plant,
    RiverDelta,
    Rock,
    SandDune,
    SandPit,
    Shrub,
    Skull,
    Stalagmite,
    Stump,
    TarPit,
    Trees,
    Vine,
    VolcanicVent,
    Volcano,
    WillowTrees,
    YuccaTrees,
    Reef,
    RandomMonsterL5(MonsterData),
    RandomMonsterL6(MonsterData),
    RandomMonsterL7(MonsterData),
    BorderGate,
    FreelancersGuild,
    HeroPlaceholder,
    QuestGuard,
    RandomDwelling,
    RandomDwellingLvl,     //subtype = creature level
    RandomDwellingFaction, //subtype = faction
    Garrison2,
    AbandonedMine(MineData),
    TradingPostSnow,
    CloverField,
    CursedGround2,
    EvilFog,
    FavorableWinds,
    FieryFields,
    HolyGrounds,
    LucidPools,
    MagicClouds,
    MagicPlains2,
    Rocklands,
}

impl ObjectType {
    pub fn from(code: u32) -> Option<Self> {
        use ObjectType::*;
        let ret = match code {
            2 => AltarOfSacrifice,
            3 => AnchorPoint,
            4 => Arena,
            5 => Artifact,
            6 => PandorasBox,
            7 => BlackMarket,
            8 => Boat,
            9 => Borderguard,
            10 => Keymaster,
            11 => Buoy,
            12 => Campfire,
            13 => Cartographer,
            14 => SwanPond,
            15 => CoverOfDarkness,
            16 => CreatureBank,
            17 => CreatureGenerator1{owner: None},
            18 => CreatureGenerator2{owner: None},
            19 => CreatureGenerator3{owner: None},
            20 => CreatureGenerator4{owner: None},
            21 => CursedGround1,
            22 => Corpse,
            23 => MarlettoTower,
            24 => DerelictShip,
            25 => DragonUtopia,
            26 => Event(EventData::default()),
            27 => EyeOfMagi,
            28 => FaerieRing,
            29 => Flotsam,
            30 => FountainOfFortune,
            31 => FountainOfYouth,
            32 => GardenOfRevelation,
            33 => Garrison,
            34 => Hero(HeroData::default()),
            35 => HillFort,
            36 => Grail,
            37 => HutOfMagi,
            38 => IdolOfFortune,
            39 => LeanTo,
            41 => LibraryOfEnlightenment,
            42 => Lighthouse{owner: None},
            43 => MonolithOneWayEntrance,
            44 => MonolithOneWayExit,
            45 => MonolithTwoWay,
            46 => MagicPlains1,
            47 => SchoolOfMagic,
            48 => MagicSpring,
            49 => MagicWell,
            50 => MarketOfTime,
            51 => MercenaryCamp,
            52 => Mermaid,
            53 => Mine(MineData::default()),
            54 => Monster(MonsterData::default()),
            55 => MysticalGarden,
            56 => Oasis,
            57 => Obelisk,
            58 => RedwoodObservatory,
            59 => OceanBottle,
            60 => PillarOfFire,
            61 => StarAxis,
            62 => Prison(HeroData::default()),
            63 => PyramidOrWogObject, //subtype 0 for pyramid, >0 for Wog object
            64 => RallyFlag,
            65 => RandomArt,
            66 => RandomTreasureArt,
            67 => RandomMinorArt,
            68 => RandomMajorArt,
            69 => RandomRelicArt,
            70 => RandomHero(HeroData::default()),
            71 => RandomMonster(MonsterData::default()),
            72 => RandomMonsterL1(MonsterData::default()),
            73 => RandomMonsterL2(MonsterData::default()),
            74 => RandomMonsterL3(MonsterData::default()),
            75 => RandomMonsterL4(MonsterData::default()),
            76 => RandomResource,
            77 => RandomTown,
            78 => RefugeeCamp,
            79 => Resource,
            80 => Sanctuary,
            81 => Scholar,
            82 => SeaChest,
            83 => SeerHut,
            84 => Crypt,
            85 => Shipwreck,
            86 => ShipwreckSurvivor,
            87 => Shipyard{owner: None},
            88 => ShrineOfMagicIncantation,
            89 => ShrineOfMagicGesture,
            90 => ShrineOfMagicThought,
            91 => Sign,
            92 => Sirens,
            93 => SpellScroll,
            94 => Stables,
            95 => Tavern,
            96 => Temple,
            97 => DenOfThieves,
            98 => Town,
            99 => TradingPost,
            100 => LearningStone,
            101 => TreasureChest,
            102 => TreeOfKnowledge,
            103 => SubterraneanGate,
            104 => University,
            105 => Wagon,
            106 => WarMachineFactory,
            107 => SchoolOfWar,
            108 => WarriorsTomb,
            109 => WaterWheel,
            110 => WateringHole,
            111 => Whirlpool,
            112 => Windmill,
            113 => WitchHut,
            114 => Brush, // Todo: How does it look like?
            115 => Bush,
            116 => Cactus,
            117 => Canyon,
            118 => Crater,
            119 => DeadVegetation,
            120 => Flowers,
            121 => FrozenLake,
            122 => Hedge,
            123 => Hill,
            124 => Hole,
            125 => Kelp,
            126 => Lake,
            127 => LavaFlow,
            128 => LavaLake,
            129 => Mushrooms,
            130 => Log,
            131 => Mandrake,
            132 => Moss,
            133 => Mound,
            134 => Mountain,
            135 => OakTrees,
            136 => Outcropping,
            137 => PineTrees,
            138 => Plant,
            143 => RiverDelta,
            147 => Rock,
            148 => SandDune,
            149 => SandPit,
            150 => Shrub,
            151 => Skull,
            152 => Stalagmite,
            153 => Stump,
            154 => TarPit,
            155 => Trees,
            156 => Vine,
            157 => VolcanicVent,
            158 => Volcano,
            159 => WillowTrees,
            160 => YuccaTrees,
            161 => Reef,
            162 => RandomMonsterL5(MonsterData::default()),
            163 => RandomMonsterL6(MonsterData::default()),
            164 => RandomMonsterL7(MonsterData::default()),
            212 => BorderGate,
            213 => FreelancersGuild,
            214 => HeroPlaceholder,
            215 => QuestGuard,
            216 => RandomDwelling,
            217 => RandomDwellingLvl,     //subtype = creature level
            218 => RandomDwellingFaction, //subtype = faction
            219 => Garrison2,
            220 => AbandonedMine(MineData::default()),
            221 => TradingPostSnow,
            222 => CloverField,
            223 => CursedGround2,
            224 => EvilFog,
            225 => FavorableWinds,
            226 => FieryFields,
            227 => HolyGrounds,
            228 => LucidPools,
            229 => MagicClouds,
            230 => MagicPlains2,
            231 => Rocklands,
            _ => return None,
        };
        Some(ret)
    }
}

#[derive(Debug, Default)]
pub struct EventData {
    pub available_for: Vec<Player>,
    pub computer_can_activate: bool,
    pub human_can_activate: bool,
    pub remove_after_visit: bool,
    pub box_content: Option<BoxContent>,
}

#[derive(Debug, Default)]
pub struct MonsterData {
    pub id: u32,
    pub amount: u32,
    pub character: u8,
    pub message: Option<String>,
    pub resources: Option<ResourcePack>,
    pub artifact: Option<ArtifactId>,
    pub never_flees: bool,
    pub growing_team: bool,
    pub aggression_factor: Option<u32>,
    pub join_only_for_money: Option<bool>,
    pub join_percentage: Option<u32>,
    pub upgraded_creatures: Option<u32>,
    pub creatures_on_battle: Option<u32>,
}

#[derive(Debug, Default)]
pub struct MineData {
    pub owner: Option<Ownership>,
    pub abandoned_resources: Vec<Resource>,
}

#[derive(Debug, Default)]
pub struct HeroData {
    pub quest_id: u32,
    pub owner: Option<Ownership>,
    pub hero_id: u32,
    pub name: Option<String>,
    pub experience: Option<u32>,
    pub portrait_id: Option<u8>,
    pub secondary_skills: Vec<SecSkill>,
    pub garison: Vec<CreatureSlot>,
    pub army_formation: u8,
    pub artifacts: Vec<HeroesArtifact>,
    pub artifacts_in_bag: Vec<ArtifactId>,
    pub patrol_radius: u8,
    pub custom_biography: Option<String>,
    pub gender: Option<Gender>,
    pub custom_spells: Vec<u8>,
    pub custom_primary_skills: Option<PrimarySkills>,
}
